package main

import (
	"bytes"
	"encoding/json"
	"flag"
	"fmt"
	"image/gif"
	"log"

	"fyne.io/fyne/v2/app"
	
	"github.com/opd-ai/desktop-companion/lib/character"
	"github.com/opd-ai/desktop-companion/lib/monitoring"
	"github.com/opd-ai/desktop-companion/lib/ui"
)

var (
	version = flag.Bool("version", false, "Show version information")
)

// Embedded character data - JSON configuration
var embeddedCharacterData = `{
  "name": "Gentle Companion",
  "description": "A low-maintenance virtual pet perfect for beginners. This easy-going companion degrades slowly and responds well to basic care.",
  "animations": {
    "idle": "animations/idle.gif",
    "talking": "animations/talking.gif",
    "happy": "animations/happy.gif",
    "sad": "animations/sad.gif",
    "hungry": "animations/hungry.gif",
    "eating": "animations/eating.gif",
    "attack": "animations/sad.gif",
    "defend": "animations/idle.gif",
    "heal": "animations/happy.gif",
    "heart_eyes": "animations/happy.gif",
    "shy": "animations/sad.gif",
    "excited": "animations/happy.gif",
    "thinking": "animations/idle.gif",
    "peaceful": "animations/idle.gif",
    "supportive": "animations/happy.gif"
  },
  "dialogs": [
    {
      "trigger": "click",
      "responses": [
        "I'm feeling great today! 😊",
        "Thanks for taking such good care of me!",
        "You're the best companion ever!",
        "Life is wonderful with you around!",
        "I love spending time with you!"
      ],
      "animation": "talking",
      "cooldown": 3
    },
    {
      "trigger": "rightclick",
      "responses": [
        "I'm always ready for care!",
        "What would you like to do?",
        "Feed me or play with me!",
        "I'm so easy to please!"
      ],
      "animation": "happy",
      "cooldown": 2
    }
  ],
  "behavior": {
    "idleTimeout": 45,
    "movementEnabled": true,
    "defaultSize": 128
  },
  "stats": {
    "hunger": {
      "initial": 100,
      "max": 100,
      "degradationRate": 0.3,
      "criticalThreshold": 15
    },
    "happiness": {
      "initial": 100,
      "max": 100,
      "degradationRate": 0.2,
      "criticalThreshold": 10
    },
    "health": {
      "initial": 100,
      "max": 100,
      "degradationRate": 0.1,
      "criticalThreshold": 5
    },
    "energy": {
      "initial": 100,
      "max": 100,
      "degradationRate": 0.4,
      "criticalThreshold": 20
    },
    "age": {
      "initial": 0,
      "max": 999999999,
      "degradationRate": 0,
      "criticalThreshold": 0
    },
    "affection": {
      "initial": 0,
      "max": 40,
      "degradationRate": 0.02,
      "criticalThreshold": 3
    },
    "trust": {
      "initial": 5,
      "max": 50,
      "degradationRate": 0.01,
      "criticalThreshold": 3
    }
  },
  "gameRules": {
    "statsDecayInterval": 120,
    "autoSaveInterval": 600,
    "criticalStateAnimationPriority": true,
    "deathEnabled": false,
    "evolutionEnabled": true,
    "moodBasedAnimations": true
  },
  "interactions": {
    "feed": {
      "triggers": [
        "rightclick"
      ],
      "effects": {
        "hunger": 40,
        "happiness": 10
      },
      "animations": [
        "eating",
        "happy"
      ],
      "responses": [
        "Wow, that was amazing!",
        "You always know exactly what I need!",
        "I feel so much better now!",
        "Thank you for the delicious meal!"
      ],
      "cooldown": 15,
      "requirements": {
        "hunger": {
          "max": 90
        }
      }
    },
    "play": {
      "triggers": [
        "doubleclick"
      ],
      "effects": {
        "happiness": 30,
        "energy": -10
      },
      "animations": [
        "happy"
      ],
      "responses": [
        "This is the best game ever!",
        "I love playing with you!",
        "More! More! Let's keep playing!",
        "You make everything so fun!"
      ],
      "cooldown": 20,
      "requirements": {
        "energy": {
          "min": 15
        }
      }
    },
    "pet": {
      "triggers": [
        "click"
      ],
      "effects": {
        "happiness": 15,
        "health": 5
      },
      "animations": [
        "happy"
      ],
      "responses": [
        "That feels absolutely wonderful!",
        "Your touch is so comforting!",
        "I could get used to this treatment!",
        "You have magic hands!"
      ],
      "cooldown": 8
    },
    "gentle_encouragement": {
      "triggers": [
        "shift+click"
      ],
      "effects": {
        "affection": 2,
        "happiness": 4,
        "trust": 1
      },
      "animations": [
        "happy"
      ],
      "responses": [
        "Your gentle words mean everything to me... 😊",
        "I feel so safe and cared for with you!",
        "Thank you for being so patient and kind!",
        "You make me feel so comfortable and loved!"
      ],
      "cooldown": 75,
      "requirements": {
        "trust": {
          "min": 10
        }
      }
    },
    "quiet_moment": {
      "triggers": [
        "ctrl+shift+click"
      ],
      "effects": {
        "affection": 3,
        "trust": 2,
        "happiness": 2
      },
      "animations": [
        "talking"
      ],
      "responses": [
        "I love these peaceful moments we share together...",
        "Just being near you makes me feel so content!",
        "These quiet times are so precious to me!",
        "I feel so relaxed when we're together like this!"
      ],
      "cooldown": 120,
      "requirements": {
        "affection": {
          "min": 8
        }
      }
    }
  },
  "progression": {
    "levels": [
      {
        "name": "Happy Baby",
        "requirement": {
          "age": 0
        },
        "size": 96,
        "animations": {}
      },
      {
        "name": "Cheerful Child",
        "requirement": {
          "age": 43200
        },
        "size": 128,
        "animations": {}
      },
      {
        "name": "Content Adult",
        "requirement": {
          "age": 129600
        },
        "size": 160,
        "animations": {}
      }
    ],
    "achievements": [
      {
        "name": "Well Fed",
        "requirement": {
          "hunger": {
            "maintainAbove": 70
          },
          "maintainAbove": {
            "duration": 43200
          }
        },
        "reward": {
          "statBoosts": {
            "hunger": 15
          }
        }
      },
      {
        "name": "Happy Pet",
        "requirement": {
          "happiness": {
            "maintainAbove": 80
          },
          "maintainAbove": {
            "duration": 21600
          }
        },
        "reward": {
          "statBoosts": {
            "happiness": 15
          }
        }
      },
      {
        "name": "Healthy",
        "requirement": {
          "health": {
            "min": 90
          }
        },
        "reward": {
          "statBoosts": {
            "health": 10
          }
        }
      },
      {
        "name": "First Week",
        "requirement": {
          "affection": {
            "min": 80
          }
        },
        "reward": {
          "statBoosts": {
            "happiness": 20,
            "health": 10
          }
        }
      }
    ]
  },
  "personality": {
    "traits": {
      "gentleness": 0.9,
      "shyness": 0.6,
      "romanticism": 0.3,
      "patience": 0.8,
      "contentment": 0.9
    }
  },
  "dialogBackend": {
    "enabled": true,
    "defaultBackend": "markov_chain",
    "fallbackChain": [
      "simple_random"
    ],
    "confidenceThreshold": 0.6,
    "backends": {
      "markov_chain": {
        "chainOrder": 2,
        "minWords": 3,
        "maxWords": 12,
        "temperatureMin": 0.3,
        "temperatureMax": 0.6,
        "useDialogHistory": true,
        "usePersonality": true,
        "triggerSpecific": true,
        "personalityBoost": 0.6,
        "moodInfluence": 0.4,
        "statAwareness": 0.3,
        "relationshipWeight": 0.5,
        "timeOfDayWeight": 0.2,
        "memoryDecay": 0.9,
        "learningRate": 0.1,
        "adaptationSteps": 3,
        "coherenceThreshold": 0.7,
        "similarityPenalty": 0.3,
        "trainingData": [
          "I'm feeling so peaceful and content today, thank you for being gentle with me.",
          "Your kindness makes me feel safe and comfortable in this world.",
          "I love how patient you are with me - it means everything.",
          "These quiet moments together are my favorite part of the day.",
          "You always know just the right way to care for me gently.",
          "I appreciate your soft approach to everything we do together.",
          "Your gentle presence makes me feel so relaxed and happy.",
          "Thank you for never rushing me - I love taking things slowly.",
          "Being with you feels like a warm, comfortable hug every time.",
          "I feel so lucky to have someone who understands my gentle nature.",
          "Your patience helps me feel confident and secure about everything.",
          "I love how you make everything feel easy and stress-free.",
          "You create such a peaceful atmosphere wherever you are.",
          "Thank you for being so understanding and gentle with my feelings.",
          "I feel so content and happy when we spend time together like this."
        ],
        "forbiddenWords": [
          "harsh",
          "rough",
          "aggressive",
          "demanding",
          "fast"
        ],
        "requiredWords": [
          "gentle",
          "peaceful",
          "patient",
          "kind",
          "comfortable",
          "easy"
        ],
        "fallbackPhrases": [
          "You're so gentle and kind to me.",
          "I feel peaceful when you're here.",
          "Thank you for being so patient.",
          "I love our quiet moments together.",
          "You make everything feel so easy.",
          "Your gentle care means everything to me."
        ]
      }
    }
  },
  "romanceStats": {
    "affection": {
      "initial": 0,
      "max": 40,
      "degradationRate": 0.03,
      "criticalThreshold": 3
    },
    "trust": {
      "initial": 15,
      "max": 50,
      "degradationRate": 0.01,
      "criticalThreshold": 5
    }
  },
  "multiplayer": {
    "enabled": true,
    "botCapable": false,
    "networkID": "gentle_companion_v1",
    "maxPeers": 3,
    "socialLevel": "low",
    "shareableStats": [
      "happiness",
      "trust"
    ],
    "networkPersonality": "shy"
  },
  "newsFeatures": {
    "enabled": true,
    "updateInterval": 3600,
    "maxStoredItems": 20,
    "readingPersonality": "gentle",
    "preferredCategories": [
      "lifestyle",
      "positive",
      "health"
    ],
    "feeds": [
      {
        "url": "https://feeds.feedburner.com/mindfulnessbell",
        "name": "Mindfulness News",
        "category": "lifestyle",
        "updateFreq": 7200,
        "maxItems": 3,
        "enabled": true
      },
      {
        "url": "https://feeds.feedburner.com/wellnesswisdom",
        "name": "Wellness Tips",
        "category": "health",
        "updateFreq": 10800,
        "maxItems": 2,
        "enabled": true
      }
    ],
    "readingEvents": []
  },
  "generalEvents": [
    {
      "name": "gentle_check_in",
      "description": "A soft moment of care and attention",
      "responses": [
        "How are you feeling today? I'm here if you need anything gentle...",
        "Just checking in on you - you don't need to do anything special, just be yourself 🌸",
        "I hope you're taking things at your own pace today..."
      ],
      "choices": [
        {
          "text": "I'm doing well, thank you",
          "effects": {
            "happiness": 4,
            "affection": 2
          },
          "responses": [
            "I'm so glad to hear that! Your wellbeing makes me happy too 💝"
          ],
          "animation": "happy"
        },
        {
          "text": "I need some gentle support",
          "effects": {
            "trust": 4,
            "happiness": 3
          },
          "responses": [
            "Of course, I'm here for you. Take all the time you need, no pressure at all 🤗"
          ],
          "animation": "talking"
        }
      ],
      "requirements": {
        "happiness": {
          "min": 20
        }
      },
      "cooldown": 9000,
      "category": "conversation",
      "trigger": "automatic"
    },
    {
      "name": "peaceful_moment",
      "description": "A quiet, restful interaction",
      "responses": [
        "Let's just enjoy this peaceful moment together...",
        "Sometimes the best thing is to simply be present with each other 🍃",
        "I love these quiet times we share - no rush, no pressure..."
      ],
      "choices": [
        {
          "text": "Enjoy the silence together",
          "effects": {
            "happiness": 6,
            "trust": 3,
            "affection": 1
          },
          "responses": [
            "*peaceful contentment* This is perfect... 😌"
          ],
          "animation": "happy"
        },
        {
          "text": "Share something gentle",
          "effects": {
            "affection": 4,
            "happiness": 2
          },
          "responses": [
            "Thank you for sharing that with me... your gentle nature brings me peace 🌺"
          ],
          "animation": "talking"
        }
      ],
      "requirements": {
        "trust": {
          "min": 10
        }
      },
      "cooldown": 6000,
      "category": "conversation",
      "trigger": "automatic"
    }
  ],
  "battleSystem": {
    "enabled": true,
    "aiDifficulty": "easy",
    "battleStats": {
      "hp": {
        "base": 80,
        "growth": 2.0,
        "max": 300
      },
      "attack": {
        "base": 10,
        "growth": 1.5,
        "max": 100
      },
      "defense": {
        "base": 12,
        "growth": 2.2,
        "max": 100
      },
      "speed": {
        "base": 6,
        "growth": 1.2,
        "max": 100
      }
    },
    "personalities": {
      "aggressive": 0.1,
      "defensive": 0.8,
      "balanced": 0.5,
      "supportive": 0.9
    },
    "availableActions": [
      "defend",
      "heal",
      "encourage",
      "gift_share",
      "rest"
    ],
    "battleResponses": {
      "victory": [
        "That was a gentle battle! I hope you had fun too! 😊",
        "Thanks for playing with me! You're so considerate!",
        "I enjoyed that peaceful competition!"
      ],
      "defeat": [
        "Well played! I'm just happy we could play together!",
        "You were so gentle with me - thank you!",
        "That was lovely! Let's play again sometime!"
      ],
      "startBattle": [
        "Let's have a gentle, friendly battle!",
        "I promise to be gentle - this will be fun!",
        "Ready for some easy-going fun?"
      ]
    }
  },
  "giftSystem": {
    "enabled": true,
    "inventorySettings": {
      "maxSlots": 6,
      "autoSort": true,
      "stackSimilar": true,
      "defaultCapacity": 40
    },
    "preferences": {
      "favoriteCategories": [
        "food",
        "flowers",
        "books",
        "toys"
      ],
      "dislikedCategories": [
        "expensive",
        "electronics"
      ],
      "personalityModifiers": {
        "food": 1.8,
        "flowers": 2.0,
        "books": 1.6,
        "toys": 1.7
      }
    },
    "giftResponses": {
      "favorite": [
        "This is so perfect and gentle! Thank you! 🌸",
        "You understand me so well! I love simple, beautiful things!",
        "What a thoughtful, peaceful gift! 💕"
      ],
      "liked": [
        "This is lovely! Thank you for being so kind!",
        "I appreciate your gentle thoughtfulness!",
        "What a sweet, simple pleasure! 😊"
      ],
      "neutral": [
        "Thank you for thinking of me!",
        "That's very considerate!",
        "I appreciate your kindness!"
      ],
      "disliked": [
        "Oh... that's quite intense for me, but thank you...",
        "I prefer simpler things, but I appreciate the thought.",
        "That's... a bit much for me, but thank you."
      ]
    },
    "memorySettings": {
      "rememberGifts": true,
      "trackPreferences": true,
      "learningEnabled": true,
      "maxMemoryItems": 80
    }
  },
  "romanceEvents": [
    {
      "name": "gentle_bonding",
      "description": "Character feels peaceful connection growing",
      "probability": 0.12,
      "effects": {
        "affection": 2,
        "happiness": 4,
        "trust": 3
      },
      "animations": [
        "happy",
        "talking"
      ],
      "responses": [
        "I feel so comfortable and peaceful when you're here with me... 🌸",
        "Our gentle friendship is growing into something really special...",
        "You make everything feel so easy and natural... I love that about you!"
      ],
      "cooldown": 900,
      "conditions": {
        "affection": {
          "min": 8
        },
        "trust": {
          "min": 12
        }
      }
    },
    {
      "name": "contentment_moment",
      "description": "Character appreciates simple moments together",
      "probability": 0.15,
      "effects": {
        "happiness": 6,
        "affection": 3,
        "trust": 2
      },
      "animations": [
        "happy",
        "talking"
      ],
      "responses": [
        "These quiet, easy moments with you are my absolute favorite...",
        "I don't need anything complicated - just being with you is perfect! 💕",
        "You bring such peace and happiness to my simple life!"
      ],
      "cooldown": 1200,
      "conditions": {
        "happiness": {
          "min": 40
        },
        "affection": {
          "min": 15
        }
      }
    },
    {
      "name": "appreciation_overflow",
      "description": "Character is overwhelmed by gentle care",
      "probability": 0.08,
      "effects": {
        "affection": 6,
        "happiness": 8,
        "trust": 4
      },
      "animations": [
        "heart_eyes",
        "happy"
      ],
      "responses": [
        "You're so patient and gentle with me... I feel so cherished! 💖",
        "Your kindness makes my heart feel so warm and full!",
        "I'm so grateful for how easy you make everything feel!"
      ],
      "cooldown": 1800,
      "conditions": {
        "affection": {
          "min": 25
        },
        "interactionCount": {
          "gentle_encouragement_min": 3
        }
      }
    },
    {
      "name": "trust_security",
      "description": "Character feels completely safe and secure",
      "probability": 0.06,
      "effects": {
        "trust": 8,
        "affection": 4,
        "happiness": 5
      },
      "animations": [
        "talking",
        "happy"
      ],
      "responses": [
        "I feel so safe and secure with you... like nothing bad could ever happen...",
        "Your gentle presence makes me feel like I can relax completely!",
        "Thank you for making me feel so protected and cared for..."
      ],
      "cooldown": 2400,
      "conditions": {
        "trust": {
          "min": 35
        },
        "affection": {
          "min": 20
        }
      }
    }
  ],
  "romanceDialogs": [
    {
      "trigger": "click",
      "responses": [
        "Oh! You're here! Everything feels so much better now! 😊",
        "I love when you visit me... you make everything so peaceful!",
        "Your gentle presence always brightens my day! 💕"
      ],
      "animation": "happy",
      "cooldown": 5,
      "requirements": {
        "stats": {
          "affection": {
            "min": 15
          }
        }
      }
    },
    {
      "trigger": "hover",
      "responses": [
        "I love feeling your gentle attention... it's so comforting...",
        "Just having you near makes me feel so content and happy...",
        "Your peaceful energy is exactly what my heart needs... 🌸"
      ],
      "animation": "happy",
      "cooldown": 8,
      "requirements": {
        "stats": {
          "affection": {
            "min": 25
          },
          "trust": {
            "min": 20
          }
        }
      }
    }
  ],
  "assetGeneration": {
    "basePrompt": "A sweet anime character with soft features and bright eyes, simple comfortable clothing, happy and easy-going expression, relaxed pose, digital art, transparent background, high quality character design for beginner-friendly companion",
    "animationMappings": {
      "idle": {
        "promptModifier": "standing calmly with arms at sides, peaceful neutral expression, slight smile, relaxed pose",
        "negativePrompt": "angry, aggressive, dark, scary, low quality, blurry",
        "stateDescription": "Default calm state",
        "frameCount": 6
      },
      "talking": {
        "promptModifier": "speaking with hand gestures, mouth slightly open, expressive face, animated pose, welcoming expression",
        "negativePrompt": "silent, static, angry expression, dark mood",
        "stateDescription": "Speaking or interacting with user",
        "frameCount": 8
      },
      "happy": {
        "promptModifier": "bright cheerful smile, eyes sparkling with joy, hands clasped together or raised, radiant expression",
        "negativePrompt": "sad, angry, neutral expression, dark colors",
        "stateDescription": "Joyful and excited state",
        "frameCount": 6
      },
      "sad": {
        "promptModifier": "downcast eyes, gentle frown, hand touching cheek or covering face, melancholic but still beautiful",
        "negativePrompt": "happy, cheerful, bright colors, aggressive",
        "stateDescription": "Sad or disappointed state",
        "frameCount": 4
      },
      "hungry": {
        "promptModifier": "looking longingly at food, hand on stomach, slightly droopy expression, cute hungry pose",
        "negativePrompt": "full, satisfied, eating, aggressive",
        "stateDescription": "Hungry and wanting food",
        "frameCount": 5
      },
      "eating": {
        "promptModifier": "eating food happily, content expression, food in hands or near mouth, satisfied pose",
        "negativePrompt": "hungry, sad, empty hands, aggressive",
        "stateDescription": "Eating and satisfied",
        "frameCount": 6
      },
      "attack": {
        "promptModifier": "dynamic attack pose, concentrated expression, action stance, power effects",
        "stateDescription": "Attacking in battle",
        "frameCount": 8
      },
      "defend": {
        "promptModifier": "defensive stance, protective pose, focused expression, shield or guard position",
        "stateDescription": "Defending in battle",
        "frameCount": 6
      },
      "heal": {
        "promptModifier": "gentle healing pose, hands glowing with soft light, caring expression, restorative energy",
        "stateDescription": "Healing or supporting",
        "frameCount": 7
      }
    },
    "generationSettings": {
      "model": "flux1d",
      "artStyle": "anime",
      "resolution": {
        "width": 128,
        "height": 128
      },
      "qualitySettings": {
        "steps": 25,
        "cfgScale": 7.5,
        "seed": -1,
        "sampler": "euler_a",
        "scheduler": "normal"
      },
      "animationSettings": {
        "frameRate": 12,
        "duration": 2.5,
        "loopType": "seamless",
        "optimization": "balanced",
        "maxFileSize": 450,
        "transparencyEnabled": true,
        "colorPalette": "adaptive"
      }
    },
    "assetMetadata": {
      "version": "1.0.0",
      "generatedAt": "2024-12-19T12:00:00Z",
      "generatedBy": "gif-generator v1.0.0"
    },
    "backupSettings": {
      "enabled": true,
      "backupPath": "backups",
      "maxBackups": 5,
      "compressBackups": true
    }
  },
  "randomEvents": [
    {
      "name": "spontaneous_moment",
      "description": "A delightful spontaneous interaction",
      "probability": 0.05,
      "effects": {
        "happiness": 10,
        "affection": 5
      },
      "animations": [
        "happy",
        "talking"
      ],
      "responses": [
        "What a lovely surprise! I'm so happy to share this moment with you! 😊",
        "Life is full of wonderful unexpected moments like this! ✨",
        "These spontaneous times together are what I treasure most! 💕"
      ],
      "cooldown": 1800
    }
  ],
  "categories": [
    "conversation"
  ],
  "triggers": [
    "click"
  ]
}`

// Embedded animations - binary GIF data encoded as Go byte slices
// This follows the "library-first" approach using standard library byte embedding
var embeddedAnimations = map[string][]byte{
	"attack": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"defend": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"eating": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"excited": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"happy": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"heal": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"heart_eyes": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"hungry": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"idle": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"peaceful": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"sad": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"shy": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x96, 0x64, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"supportive": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0xff, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"talking": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x96, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0xff, 0x96, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0xff, 0x96, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
	"thinking": {
0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x40, 0x00, 0x40, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0x0b, 0x4e, 0x45, 0x54, 0x53, 0x43, 0x41, 0x50, 0x45, 0x32, 0x2e, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0xd2, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0x52, 0x60, 0x80, 0x93, 0x28, 0x51, 0x96, 0x7c, 0x98, 0xb2, 0xa5, 0xcb, 0x95, 0x08, 0x5d, 0xca, 0x9c, 0x09, 0x73, 0xe0, 0xcc, 0x9b, 0x2f, 0x57, 0xe2, 0xdc, 0x99, 0x53, 0x24, 0xcf, 0x9f, 0x29, 0x7d, 0x02, 0x1d, 0x1a, 0x00, 0x24, 0xd1, 0xa3, 0x1e, 0x8f, 0x2a, 0xe5, 0xa8, 0xb4, 0xe9, 0xc6, 0xa6, 0x4b, 0x33, 0x42, 0x75, 0x7a, 0x71, 0x2a, 0xd4, 0xaa, 0x56, 0xa3, 0x56, 0xcc, 0xaa, 0x75, 0x22, 0x57, 0xaa, 0x5e, 0xbf, 0x22, 0xa5, 0x28, 0x76, 0xac, 0xc4, 0xb2, 0x5d, 0x59, 0xa2, 0x25, 0x1a, 0x76, 0x2d, 0xd0, 0xb6, 0x6e, 0x79, 0xc2, 0x8d, 0x8b, 0x73, 0x2e, 0x5d, 0x9a, 0x67, 0xef, 0xee, 0xb4, 0xab, 0xb7, 0x25, 0xdf, 0xbe, 0x2a, 0xff, 0xf6, 0xdd, 0x0a, 0xb8, 0x67, 0xde, 0xc2, 0x41, 0x09, 0x23, 0x2e, 0x6a, 0x71, 0xf1, 0x49, 0xac, 0x8b, 0x31, 0x46, 0x96, 0x0a, 0xf8, 0x69, 0x65, 0xcb, 0x77, 0x93, 0xd2, 0x35, 0xea, 0x56, 0x68, 0x59, 0x92, 0x9f, 0x75, 0x5a, 0xad, 0x69, 0xf2, 0x2a, 0x69, 0x82, 0x43, 0x4f, 0x2b, 0xbc, 0xa9, 0xba, 0xb5, 0xeb, 0xd7, 0xb0, 0x63, 0xcb, 0x9e, 0x4d, 0xbb, 0xb6, 0xed, 0xdb, 0x15, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0a, 0x00, 0x0a, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x4b, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0xea, 0xdc, 0xc9, 0xb3, 0xa7, 0xcf, 0x9f, 0x09, 0x03, 0x02, 0x00, 0x21, 0xf9, 0x04, 0x01, 0x14, 0x00, 0x00, 0x00, 0x2c, 0x0c, 0x00, 0x0c, 0x00, 0x29, 0x00, 0x29, 0x00, 0x81, 0x00, 0x00, 0x00, 0x64, 0x96, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x01, 0x08, 0x1c, 0x48, 0xb0, 0xa0, 0xc1, 0x83, 0x08, 0x13, 0x2a, 0x5c, 0xc8, 0xb0, 0xa1, 0xc3, 0x87, 0x10, 0x23, 0x4a, 0x9c, 0x48, 0xb1, 0xa2, 0xc5, 0x8b, 0x18, 0x33, 0x6a, 0xdc, 0xc8, 0xb1, 0xa3, 0xc7, 0x8f, 0x20, 0x43, 0x8a, 0x1c, 0x49, 0xb2, 0xa4, 0xc9, 0x93, 0x28, 0x53, 0xaa, 0x5c, 0xc9, 0xb2, 0xa5, 0xcb, 0x97, 0x30, 0x63, 0xca, 0x9c, 0x49, 0xb3, 0xa6, 0xcd, 0x9b, 0x38, 0x73, 0x72, 0x0c, 0x08, 0x00, 0x3b},
}

// Application metadata
const appVersion = "1.0.0-easy"
const appID = "com.opdai.easy-companion"

// showVersionInfo displays application version information.
func showVersionInfo() {
	fmt.Printf("Desktop Companion (easy) v%s\n", appVersion)
	fmt.Println("Built with Go and Fyne - Cross-platform desktop pet")
}

func main() {
	flag.Parse()

	if *version {
		showVersionInfo()
		return
	}
	// Parse embedded character data using standard library JSON
	var card character.CharacterCard
	if err := json.Unmarshal([]byte(embeddedCharacterData), &card); err != nil {
		log.Fatalf("Failed to parse embedded character data: %v", err)
	}

	// Create embedded animation manager
	animManager, err := createEmbeddedAnimationManager()
	if err != nil {
		log.Fatalf("Failed to create animation manager: %v", err)
	}

	// Initialize performance profiler (following project standards)
	profiler := monitoring.NewProfiler(50)
	if err := profiler.Start("", "", false); err != nil {
		log.Fatalf("Failed to start profiler: %v", err)
	}
	defer profiler.Stop("", false)

	// Create Fyne application with character-specific ID
	myApp := app.NewWithID(appID)
	
	// Create character with embedded assets (no filesystem dependencies)
	char, err := character.NewEmbedded(&card, animManager)
	if err != nil {
		log.Fatalf("Failed to create character: %v", err)
	}

	// Create and show UI (reusing existing UI components)
	window := ui.NewDesktopWindow(myApp, char, false, profiler, false, false, nil, false, false, false)
	window.Show()
	myApp.Run()
}

// createEmbeddedAnimationManager creates an animation manager from embedded data
// Uses standard library image/gif package for decoding
func createEmbeddedAnimationManager() (*character.AnimationManager, error) {
	animManager := character.NewAnimationManager()
	
	for name, data := range embeddedAnimations {
		reader := bytes.NewReader(data)
		gifData, err := gif.DecodeAll(reader)
		if err != nil {
			return nil, fmt.Errorf("failed to decode embedded animation %s: %w", name, err)
		}
		
		if err := animManager.LoadEmbeddedAnimation(name, gifData); err != nil {
			return nil, fmt.Errorf("failed to load embedded animation %s: %w", name, err)
		}
	}
	
	return animManager, nil
}
